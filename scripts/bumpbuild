#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
  bumpbuild.py
  ------------

  build helper script

"""
import datetime

import sys

filename = sys.argv[1]

ifile=open(filename)
ilines = ifile.readlines()
ifile.close()

version='0.0.0'

options = [s.lower() for s in sys.argv[2:]]
if 'major' in options:
    bump_major = 1
    bump_minor = 0
    bump_build = 0
elif 'minor' in options:
    bump_major = 0
    bump_minor = 1
    bump_build = 0
else:
    bump_major = 0
    bump_minor = 0
    bump_build = 1

mflag=True
nflag=True
bflag=True
dflag=True
tflag=True
vflag=True

olines=[]
for line in ilines:
    if mflag and line.startswith('MAJOR'):
        major=int(line.split('=')[1])+bump_major
        olines.append('MAJOR=%d\n' % major)
        mflag=False
    elif nflag and line.startswith('MINOR'):
        minor=int(line.split('=')[1])+bump_minor
        if bump_major:
            minor = 0
        olines.append('MINOR=%d\n' % minor)
        nflag=False
    elif bflag and line.startswith('BUILD'):
        build=int(line.split('=')[1])+bump_build
        if bump_major or bump_minor:
            build = 0
        olines.append('BUILD=%d\n' % build)
        bflag=False
    elif dflag and line.startswith('DATE'):
        now = datetime.datetime.now()
        olines.append('DATE=\'%s\'\n' % now.strftime('%Y-%m-%d'))
        dflag = False
    elif tflag and line.startswith('TIME'):
        now = datetime.datetime.now()
        olines.append('TIME=\'%s\'\n' % now.strftime('%H:%M:%S'))
        tflag = False
    elif vflag and line.startswith('VERSION'):
        version='%s.%s.%s' % (major, minor, build)
        olines.append('VERSION=\'%s\'\n' % version)
        vflag = False
    else:
        olines.append(line)

ofile=open(filename,'w')
for line in olines:
    ofile.write(line)
ofile.close()

print(version)
